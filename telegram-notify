#!/bin/bash
# ---------------------------------------------------
#  Send notofication to a telegram account thru
#  a bot account
#
#  Configuration is stored in /etc/telegram-notify.conf
#
#  Depends on curl and perl
#    
#  Parameters :
#    --success  
#    --error  
#    --question  
#    --title  TextOfTitle
#    --text TextOfMessage
#    --file /path/of/file/to/display
#    --photo /path/of/photo/to/display
#
#  Revision history :
#    10/01/2016, V1.0 - Creation by N. Bernaerts
#    22/01/2016, V1.1 - Handle emoticons
# ---------------------------------------------------

DISPLAY_TEXT=""
DISPLAY_PICT=""
DISPLAY_ICON=""

# -------------------------------------------------------
#   Check tools availability
# -------------------------------------------------------

command -v curl >/dev/null 2>&1 || { echo "[Error] Please install curl"; exit 1; }

# -------------------------------------------------------
#   Read configuration
# -------------------------------------------------------

# Configuration file
FILE_CONF="/etc/telegram-notify.conf"

# check configuration file
[ -f "${FILE_CONF}" ] || { echo "[Error] Please install ${FILE_CONF}"; exit 1; }

# Load configuration
API_KEY=$(cat "${FILE_CONF}" | grep "api-key=" | cut -d'=' -f2)
USER_ID=$(cat "${FILE_CONF}" | grep "user-id=" | cut -d'=' -f2)

# check configuration parameters
[ "${API_KEY}" = "" ] && { echo "[Error] Please setup api-key in ${FILE_CONF}"; exit 1; }
[ "${USER_ID}" = "" ] && { echo "[Error] Please setup user-id in ${FILE_CONF}"; exit 1; }

# -------------------------------------------------------
#   Loop to load arguments
# -------------------------------------------------------

while test $# -gt 0
do
  case "$1" in

    "--success") 
      DISPLAY_ICON=$'\U00002705'
      shift
      ;;

    "--error") 
      DISPLAY_ICON=$'\U0000274C'
      shift
      ;;

    "--question") 
      DISPLAY_ICON=$'\U00002753'
      shift
      ;;

    "--text") 
      shift
      DISPLAY_TEXT="$1"
      shift
      ;;

    "--title") 
      shift
      DISPLAY_TITLE="*$1*"
      shift
      ;;

    "--file") 
      shift
      DISPLAY_TEXT="$(cat $1)"
      shift
      ;;

    "--photo") 
      shift
      DISPLAY_PICT="$1"
      shift
      ;;

    *)
      ;;
  esac
done

# -------------------------------------------------------
#   String preparation : space and line break
# -------------------------------------------------------

# if icon defined, add a space
[ "${DISPLAY_ICON}" != "" ] && DISPLAY_ICON="${DISPLAY_ICON} "

# if title defined, add HTML line break
[ "${DISPLAY_TITLE}" != "" ] && DISPLAY_TITLE="${DISPLAY_TITLE} %0A"

# if text defined, replace \n by HTML line break
[ "${DISPLAY_TEXT}" != "" ] && DISPLAY_TEXT="$(echo "${DISPLAY_TEXT}" | sed 's:\\n:\n:g')"

# -------------------------------------------------------
#   Notification
# -------------------------------------------------------

#   Photo (with icon and caption)
if [ "${DISPLAY_PICT}" != "" ]
then
  curl -s -X POST "https://api.telegram.org/bot${API_KEY}/sendPhoto" -F chat_id=${USER_ID} -F caption="${DISPLAY_ICON}${DISPLAY_TEXT}" -F photo="@${DISPLAY_PICT}"

#   Text (with icon and title)
elif [ "${DISPLAY_TEXT}" != "" ]
then
  curl --data parse_mode=markdown --data chat_id=${USER_ID} --data text="${DISPLAY_ICON}${DISPLAY_TITLE}${DISPLAY_TEXT}"  "https://api.telegram.org/bot${API_KEY}/sendMessage"

#   Nothing, error
else
  echo "[Error] Nothing to notify"
fi

# end
exit 0
